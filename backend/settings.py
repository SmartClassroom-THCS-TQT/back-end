"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
from pathlib import Path
from datetime import timedelta
import os
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Khởi tạo môi trường
env = environ.Env()

# Đọc file .env
env_file = os.path.join(BASE_DIR, '.env')
if os.path.exists(env_file):
    environ.Env.read_env(env_file)
else:
    print("Warning: .env file not found. Using default settings.")

# Cấu hình các giá trị từ .env
SECRET_KEY = env('SECRET_KEY', default='django-insecure-jws0d7!db@mj42q-*n7cqn@^+guao$@rgf3o_@@al5ailinfdr')
DEBUG = True  # Luôn để True cho dễ debug
ALLOWED_HOSTS = ['*']  # Cho phép tất cả các host

# Cấu hình bảo mật cơ bản
SECURE_SSL_REDIRECT = env('SECURE_SSL_REDIRECT', default=False)  # Chuyển hướng HTTP sang HTTPS
SESSION_COOKIE_SECURE = env('SESSION_COOKIE_SECURE', default=False)  # Cookie chỉ được gửi qua HTTPS
CSRF_COOKIE_SECURE = env('CSRF_COOKIE_SECURE', default=False)  # CSRF cookie chỉ được gửi qua HTTPS
SECURE_BROWSER_XSS_FILTER = True  # Bật XSS filter
SECURE_CONTENT_TYPE_NOSNIFF = True  # Ngăn chặn MIME type sniffing
X_FRAME_OPTIONS = 'DENY'  # Ngăn chặn clickjacking

# Cấu hình CORS
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = env('CORS_ALLOWED_ORIGINS', default=['http://localhost:3000', 'http://127.0.0.1:3000'])

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_json_api',
    'corsheaders',
    'users',
    'rest_framework.authtoken',
    'rest_framework_simplejwt',
    'managements',
    'rooms_managements',
    'educational_resources',
    'academic_results',
    'django_filters',
    'cicd',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',


]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'




#database - postgres
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': env('DB_NAME'),
        'USER': env('DB_USER'),
        'PASSWORD': env('DB_PASSWORD'),
        'HOST': env('DB_HOST'),
        'PORT': env('DB_PORT'),
    }
}




# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Ho_Chi_Minh'
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'users.account'


REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    ),
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.MultiPartParser',
        'rest_framework.parsers.FormParser',
    ),
     'DEFAULT_AUTHENTICATION_CLASSES': (
        #  Mặc định kh yêu cầu xác thực, yêu cầu xác thực riêng biệt cho từng view
        #  'rest_framework_simplejwt.authentication.JWTAuthentication',  # JWT Authentication
        # 'rest_framework.authentication.SessionAuthentication',  # Session Authentication
        # 'rest_framework.authentication.BasicAuthentication',  # Basic Auth
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend']
}
RESTQL = {
    'MAX_ALIAS_LEN': 300,
    'QUERY_PARAM_NAME': 'q'
}

SIMPLE_JWT = {
    'USER_ID_FIELD': 'user_id',  # Sử dụng 'user_id' thay vì 'id'
    'USER_ID_CLAIM': 'user_id',  # ghi `user_id` vào trong token
    'ACCESS_TOKEN_LIFETIME': timedelta(days=2),  # Thời gian sống của access token
    'REFRESH_TOKEN_LIFETIME': timedelta(days=365 * 100),    # Thời gian sống của refresh token
    'ROTATE_REFRESH_TOKENS': True,                # Tùy chọn làm mới refresh token khi làm mới access token
    'BLACKLIST_AFTER_ROTATION': False,             # Có nên đưa refresh token vào blacklist sau khi bị làm mới
    'ALGORITHM': 'HS256',                          # Thuật toán mã hóa
}


MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
CORS_ALLOW_ALL_ORIGINS = True

